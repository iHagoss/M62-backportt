- name: Integrate KernelSU
  run: |.


        echo "Integrating KernelSU..."
        
        if [ ! -d "KernelSU" ]; then
          echo "❌ KernelSU directory not found! Ensure the KernelSU repository is cloned correctly."
          exit 1
        fi
        
        # Determine the correct KernelSU source root (kernel or ksu subdirectory)
        KERNELSU_SOURCE_ROOT_IN_CLONE=""
        if [ -d "KernelSU/kernel" ]; then
          KERNELSU_SOURCE_ROOT_IN_CLONE="KernelSU/kernel"
          echo "✅ Found KernelSU kernel directory: KernelSU/kernel"
        elif [ -d "KernelSU/ksu" ]; then
          KERNELSU_SOURCE_ROOT_IN_CLONE="KernelSU/ksu"
          echo "✅ Found KernelSU ksu directory: KernelSU/ksu"
        else
          echo "❌ KernelSU kernel files not found in expected locations (KernelSU/kernel or KernelSU/ksu) inside KernelSU clone!"
          echo "Listing contents of KernelSU directory:"
          ls -R KernelSU || true
          exit 1
        fi

        # Find the setup.sh script. It might be in the KERNELSU_SOURCE_ROOT_IN_CLONE or the top-level KernelSU clone.
        SETUP_SH_PATH=""
        if [ -f "$KERNELSU_SOURCE_ROOT_IN_CLONE/setup.sh" ]; then
          SETUP_SH_PATH="$KERNELSU_SOURCE_ROOT_IN_CLONE/setup.sh"
          echo "✅ Found KernelSU setup script at: $SETUP_SH_PATH"
        elif [ -f "KernelSU/setup.sh" ]; then # Fallback to root of KernelSU clone
          SETUP_SH_PATH="KernelSU/setup.sh"
          echo "✅ Found KernelSU setup script at: $SETUP_SH_PATH (root of clone)"
        else
          echo "❌ KernelSU setup.sh script not found. KernelSU integration will likely fail without it."
          exit 1
        fi

        echo "Running KernelSU setup script: bash $SETUP_SH_PATH"
        chmod +x "$SETUP_SH_PATH"
        # The setup.sh script typically expects to be run from the main kernel source root.
        # GITHUB_WORKSPACE is the path to your M62-backportt repository.
        (cd "$GITHUB_WORKSPACE" && bash "$GITHUB_WORKSPACE/$SETUP_SH_PATH") || { echo "❌ KernelSU setup.sh failed during execution! This likely points to incorrect paths in the script itself or its execution context."; exit 1; }
        echo "KernelSU setup script finished."
        
        # Verify KernelSU integration after setup attempts
        echo "Verifying KernelSU integration after setup:"
        if [ -f "ksu.c" ] || [ -d "kernelsu" ] || [ -d "ksu" ]; then # Check for common KSU module dirs/files
          echo "✅ KernelSU module files/directories appear to be in place."
        else
          echo "❌ KernelSU module files/directories NOT found after setup.sh. Integration likely failed. This is a critical error."
          ls -l || true # List top-level files for debugging
          exit 1 # Fail if KernelSU is not present
        fi
        if grep -q "CONFIG_KSU" Kconfig 2>/dev/null; then
            echo "✅ CONFIG_KSU entry found in Kconfig (post-integration check)."
        else
            echo "❌ CONFIG_KSU entry NOT found in Kconfig. This is unusual; KernelSU setup should add it. Build will likely fail."
            exit 1 # Fail if KSU is not configured
        fi
        # Check if the main Makefile was patched
        if grep -q "kernelsu.o" Makefile 2>/dev/null; then
            echo "✅ 'kernelsu.o' found in main Makefile (indicating successful patching)."
        else
            echo "❌ 'kernelsu.o' NOT found in main Makefile. KernelSU module might not be linked. Build will likely fail."
            exit 1
        fi
        echo "Current directory contents around KernelSU problem areas (for debugging):"
        ls -l ksu.c fs/ security/selinux/include/ include/linux/ || true

. 
